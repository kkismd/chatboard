<%= javascript_include_tag 'move.min.js' %>
<%= javascript_include_tag 'http://js.pusher.com/2.0/pusher.min.js' %>
<p id="notice"><%= notice %></p>

<div id="chat-screen">
  <div class="qrcode" title="click to resize">
    <table>
      <%- @qr.modules.each_index do |x| -%>
          <tr>
            <%- @qr.modules.each_index do |y| -%>
                <%- if @qr.dark?(x,y) -%>
                    <td class="size5 black"></td>
                <%- else -%>
                    <td class="size5 white"></td>
                <%- end -%>
            <%- end -%>
          </tr>
      <%- end -%>
    </table>
  </div>
</div>

<%# コメントを作るときのひな形 -%>
<div id="template">
  <span class="comment"></span>
</div>

<script type="text/javascript">
    var config = {
        lifetime: '6s'
    };

    function initial_position() {
        var top = Math.max.apply(null, $('#chat-screen span.comment').map(function (i, c) {
            return $(c).position().top + $(c).height()
        }));
        // 下までいっぱいになったら弾幕モード
        if (top > chat_screen().height()) {
            top = Math.floor(Math.random() * chat_screen().height());
        }
        var left = chat_screen().width();

        return {top: top, left: left};
    }
    function chat_screen() { return $('#chat-screen'); }

    function new_comment(text) {
        var comment = $('#template span.comment').clone();
        comment.text(text);
        comment.css(initial_position());
        chat_screen().append(comment);
        go(comment.get(0), config.lifetime);
    }
    function go(element, lifetime) {
        move(element).
                x(0 - (chat_screen().width() + $(element).width())).
                duration(lifetime).
                ease('linear').
                end(function(){ $(element).remove();});
    }
    var pusher = new Pusher('<%= Pusher.key %>');
    var channel = pusher.subscribe('<%= @serial %>');
    channel.bind('comment', function (data) {
        var comments = data.comments
        $.each(comments, function(i, comment){
            new_comment(comment);
        });
    });

    var qrcode_size = 5;
    $('.qrcode').on('click', function (e) {
        var tds = $('.qrcode table td');
        switch (qrcode_size) {
            case 5: tds.removeClass('size5').addClass('size4'); qrcode_size--; break;
            case 4: tds.removeClass('size4').addClass('size3'); qrcode_size--; break;
            case 3: tds.removeClass('size3').addClass('size0'); qrcode_size = 0; break;
            case 0: tds.removeClass('size0').addClass('size5'); qrcode_size = 5; break;
        }
    })
</script>

<p class="navi">
  <%= link_to @serial, url_for(:action => :mb_show, :serial => @serial), :target => '_blank' %>
  <%= link_to 'Back', root_path %>
</p>

